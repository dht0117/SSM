<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

<!--  基于AOP的注解
  1.将目标类和切面类都加入到ioc容器中 @Component
  2.告诉Spring那个是切面类 @Aspect
  3.在切面类中使用5个注解来配置切面中的这些通知方法都何时运行
  4.开启基于注解AOP功能
  -->
<!--  开启基于注解AOP功能：aop名称空间  -->

<!--  基于配置的AOP  -->
    <bean id="myCalculator" class="com.atguigu.impl.MyCalculator"></bean>
    <bean id="logUtils" class="com.atguigu.utils.LogUtils"></bean>

<!--  需要AOP名称空间  -->
    <aop:config>
        <!--   指定切面     -->
        <aop:aspect ref="logUtils">
            <aop:pointcut id="mypoint" expression="execution(* com.atguigu.impl.*.*(..))"/>
            <aop:before method="logStart" pointcut="execution(* com.atguigu.impl.*.*(..))"></aop:before>
            <aop:after-returning method="logReturn" pointcut-ref="mypoint" returning="result"></aop:after-returning>
            <aop:after-throwing method="logException" pointcut-ref="mypoint" throwing="exception"></aop:after-throwing>
            <aop:after method="logFinally" pointcut-ref="mypoint"></aop:after>
        </aop:aspect>
        <!--    在切面类中使用5个注解来配置切面中的这些通知方法都何时运行    -->

    </aop:config>
</beans>